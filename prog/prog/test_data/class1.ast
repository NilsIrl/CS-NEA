Program(vec![
    Statement::ClassDeclaration {
        name: "Pet".to_string(),
        superclass: None,
        fields: vec![
            (true, "name".to_string()),
        ],
        methods: vec![
            (
                false,
                FunctionDeclaration {
                    name: "new".to_string(),
                    args: vec![
                        ("givenName".to_string(), false)
                    ],
                    body: vec![
                        Statement::Assignment(Assignment(Reference::Identifier("name".to_string()),
						Expression::Reference(Reference::Identifier("givenName".to_string()))))
                    ]
                }
            )
        ],
    },
    Statement::ClassDeclaration {
        name: "Dog".to_string(),
        superclass: Some("Pet".to_string()),
        fields: vec![
            (true, "breed".to_string()),
        ],
        methods: vec![
            (
                false,
                FunctionDeclaration {
                    name: "new".to_string(),
                    args: vec![
                        ("givenName".to_string(), false),
                        ("givenBreed".to_string(), false),
                    ],
                    body: vec![
                        Statement::Expression(Expression::MethodCall(
                            Box::new(Expression::Reference(Reference::Identifier("super".to_string()))),
                            Call("new".to_string(),
							vec![Expression::Reference(Reference::Identifier("givenName".to_string()))])
                        )),
                        Statement::Assignment(Assignment(
                            Reference::Identifier("breed".to_string()),
                            Expression::Reference(Reference::Identifier("givenBreed".to_string())),
                        )),
                    ]
                }
            )
        ]
    }
])
